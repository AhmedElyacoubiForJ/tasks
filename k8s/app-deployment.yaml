# üß™ Ausrollen
# kubectl create namespace dev --dry-run=client -o yaml | kubectl apply -f -
# kubectl apply -f k8s/init-db-script.yaml
# kubectl apply -f k8s/db-deployment.yaml
# kubectl apply -f k8s/db-service.yaml
# kubectl apply -f k8s/app-deployment.yaml
# kubectl apply -f k8s/app-service.yaml

# üåê Zugriff testen
# minikube ip
# curl http://$(minikube ip):30080/api/tasks
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tasks-app
  namespace: dev
spec:
  replicas: 2
  selector:
    matchLabels:
      app: tasks-app
  template:
    metadata:
      labels:
        app: tasks-app
    spec:
      containers:
        - name: tasks-app
          image: tasks-app:dev
          ports:
            - containerPort: 8080
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: compose-dev
            - name: DB_HOST
              value: postgres-service
            - name: DB_PORT
              value: "5432"
            - name: DB_NAME
              value: tasks_dev_db
            - name: APP_DB_USER
              value: dev_user
            - name: APP_DB_PASSWORD
              value: dev_secret
      initContainers:
        - name: wait-for-db
          image: busybox
          command: [ 'sh', '-c', 'until nc -z postgres-service 5432; do echo waiting for db; sleep 2; done' ]
