# üê≥ Docker-Umgebung (ohne Compose)

#ROOT := $(shell git rev-parse --show-toplevel)
ROOT := $(shell dirname $(realpath $(lastword $(MAKEFILE_LIST))))
DOCKER_SCRIPTS := $(ROOT)/scripts/docker

print-paths:
	@echo MAKEFILE_LIST=$(MAKEFILE_LIST)
	@echo ROOT=$(ROOT)
	@echo DOCKER_SCRIPTS=$(DOCKER_SCRIPTS)


help-docker:
	@echo "üê≥ Docker-Umgebung (manuell, ohne Compose):"
	@echo "  make docker-dev-up         # Starte manuelle Umgebung"
	@echo "  make docker-dev-down       # Stoppe Container"
	@echo "  make docker-dev-restart    # Neustart"
	@echo "  make docker-dev-logs       # Zeige Logs"
	@echo "  make docker-dev-status     # Status anzeigen"
	@echo "  make docker-dev-db-init    # DB initialisieren"
	@echo "  make docker-dev-db-reset   # DB zur√ºcksetzen"
	@echo "  make docker-dev-health     # Health-Check"
	@echo "  make docker-dev-check-env  # ENV-Diagnose"
	@echo "  make docker-dev-verify     # Vollst√§ndige Pr√ºfung"

.PHONY: docker-dev-up docker-dev-down

docker-dev-up:	 ## Startet die Docker-Dev-Umgebung
	bash $(DOCKER_SCRIPTS)/dev.sh

docker-dev-down: ## Stoppt und r√§umt die Docker-Dev-Umgebung auf
	bash $(DOCKER_SCRIPTS)/stop.sh

docker-dev-restart:
	bash $(DOCKER_SCRIPTS)/restart.sh

docker-dev-logs:
	bash $(DOCKER_SCRIPTS)/logs.sh

docker-dev-status:
	- bash $(DOCKER_SCRIPTS)/status.sh

docker-dev-db-init:
	bash $(DOCKER_SCRIPTS)/init-db.sh

docker-dev-db-reset:
	bash $(DOCKER_SCRIPTS)/reset-db.sh

docker-dev-health:
	bash $(DOCKER_SCRIPTS)/health.sh

docker-dev-check-env:
	bash $(DOCKER_SCRIPTS)/check-env.sh

docker-dev-verify:
	@echo "üîç Starte vollst√§ndige Umgebungpr√ºfung..."
	@bash $(DOCKER_SCRIPTS)/check-env.sh
	@bash $(DOCKER_SCRIPTS)/status.sh || true
	@bash $(DOCKER_SCRIPTS)/health.sh || true
